from aiogram import types, Dispatcher
from create_bot import bot
from keyboards import kb_client
from keyboards import kb_client_0
from keyboards import kb_list
from aiogram.types import ReplyKeyboardRemove
from data_base import sqlite_db
from aiogram.dispatcher.filters.state import State, StatesGroup
from handlers.admin import competitors


class FSMClient(StatesGroup):
    load_stock_name = State()
    trading_stock = State()
    buy_stock_state = State()
    sell_stock_state = State()


class FSMAnother(StatesGroup):
    main = State()


class FSMClient_portfolio(StatesGroup):
    count_portfolio = State()


class FSMClient_stocks_list(StatesGroup):
    list = State()


# @dp.message_handler(commands=['start', 'help'])
async def command_start(message: types.Message):
    try:
        await sqlite_db.sql_create_user_table(message)
        await bot.send_message(message.from_user.id, '–£–¥–∞—á–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏', reply_markup=kb_client)
        await message.delete()
    except:
        await message.reply('–û–±—â–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º —á–µ—Ä–µ–∑ –õ–°, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–º—É:\nhttps://t.me/Pizza_SheefBot')


# @dp.message_handler(commands=['–°–ø–∏—Å–æ–∫_–∞–∫—Ü–∏–π'])
async def tinkoff_prices(message: types.Message, state: FSMAnother.main):
    global ind
    ind = 0
    await bot.send_message(message.from_user.id, '–°–ø–∏—Å–æ–∫ –∞–∫—Ü–∏–π', reply_markup=kb_list)
    await sqlite_db.sql_read(message, ind)
    ind += 1
    await state.finish()
    await FSMClient_stocks_list.list.set()


# @dp.message_handler(commands=['–í–µ—Ä–Ω—É—Ç—å—Å—è'])
async def tinkoff_another_back(message: types.Message, state: FSMAnother.main):
    await bot.send_message(message.from_user.id, '–ì–æ—Ç–æ–≤–æ', reply_markup=kb_client)
    await state.finish()


# @dp.message_handler(commands=['–¢–æ–ø_—Ç—Ä–µ–π–¥–µ—Ä–æ–≤'])
async def tinkoff_another_top_traders(message: types.Message, state: FSMAnother.main):
    await sqlite_db.sql_top_traders(message)
    await state.finish()


# @dp.message_handler(commands=['–¢–µ–∫—É—â–∏–µ_—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã_—Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è'])
async def tinkoff_another_top_competitors(message: types.Message, state: FSMAnother.main):
    if len(competitors) == 0:
        res = "–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ –Ω–µ –∏–¥—ë—Ç"
        await bot.send_message(message.from_user.id, res, reply_markup=kb_client)
        await state.finish()
        return
    res = "–¢–µ–∫—É—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è\n\n"
    res += await sqlite_db.sql_top_competitors(competitors)
    await bot.send_message(message.from_user.id, res, reply_markup=kb_client)
    await state.finish()


# @dp.message_handler(commands=['–ï—â—ë'])
async def tinkoff_prices_0(message: types.Message, state: FSMClient_stocks_list.list):
    global ind
    await sqlite_db.sql_read(message, ind)
    ind += 1


# @dp.message_handler(commands=['–í–µ—Ä–Ω—É—Ç—å—Å—è'])
async def tinkoff_prices_1(message: types.Message, state: FSMClient_stocks_list.list):
    await bot.send_message(message.from_user.id, '–ì–æ—Ç–æ–≤–æ', reply_markup=kb_client)
    await state.finish()


# @dp.message_handler(commands=['/–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã'])
async def tinkoff_another(message: types.Message):
    await FSMClient.load_stock_name.set()
    await message.reply('–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É', reply_markup=kb_client_0)
    await FSMAnother.main.set()


# @dp.message_handler(commands=['/–£–∑–Ω–∞—Ç—å_—Ü–µ–Ω—É_–Ω–∞_–∞–∫—Ü–∏—é'])
async def tinkoff_find_name(message: types.Message):
    await FSMClient.load_stock_name.set()
    await message.reply('–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–∫—Ü–∏–∏', reply_markup=ReplyKeyboardRemove())


# @dp.message_handler(state=FSMClient.load_stock_name)
async def load_stock_name(message: types.Message, state: FSMClient.load_stock_name):
    name = await sqlite_db.sql_find_real_name(message.text)
    await sqlite_db.sql_update(name)
    res = await sqlite_db.sql_read_one(message, name)
    if not res:
        await state.finish()
        return
    await FSMClient.trading_stock.set()


# @dp.message_handler(state=FSMClient.trading_stock)
async def buy_stock(message: types.Message, state: FSMClient.trading_stock):
    await bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å\n\n"
                                                 "–ú–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –¥–æ " + str(
        await sqlite_db.sql_mx_buy(message)) + " –∞–∫—Ü–∏–π",
                           reply_markup=ReplyKeyboardRemove())
    await FSMClient.buy_stock_state.set()


# @dp.message_handler(state=FSMClient.buy_stock_state)
async def buy_stock_1(message: types.Message, state: FSMClient.buy_stock_state):
    if not message.text.isdigit():
        await bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ")
        return
    if not await sqlite_db.sql_buy_stock(message):
        return
    await state.finish()


# @dp.message_handler(state=FSMClient.trading_stock)
async def sell_stock(message: types.Message, state: FSMClient.trading_stock):
    await bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–∞—Ç—å",
                           reply_markup=ReplyKeyboardRemove())
    await FSMClient.sell_stock_state.set()


# @dp.message_handler(state=FSMClient.sell_stock_state)
async def sell_stock_1(message: types.Message, state: FSMClient.sell_stock_state):
    if not message.text.isdigit():
        await bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ")
        return
    if not await sqlite_db.sql_sell_stock(message):
        return
    await state.finish()


# @dp.message_handler(state=FSMClient.trading_stock)
async def stock_stop_trading(message: types.Message, state: FSMClient.trading_stock):
    await bot.send_message(message.from_user.id, "–°—Ç–æ–ø", reply_markup=kb_client)
    await state.finish()


# @dp.message_handler(commands=['/–ú–æ–π_–ø–æ—Ä—Ç—Ñ–µ–ª—å'])
async def tinkoff_portfolio(message: types.Message):
    await FSMClient_portfolio.count_portfolio.set()
    await sqlite_db.sql_print_user_table(message)


# @dp.message_handler(commands=['/–†–∞—Å—Å—á–∏—Ç–∞—Ç—å_—Ü–µ–Ω—É_–ø–æ—Ä—Ç—Ñ–µ–ª—è'])
async def tinkoff_portfolio_count(message: types.Message, state: FSMClient_portfolio.count_portfolio):
    await sqlite_db.sql_count_user_table(message)
    await state.finish()


# @dp.message_handler(commands=['/–í–µ—Ä–Ω—É—Ç—å—Å—è'])
async def tinkoff_portfolio_break(message: types.Message, state: FSMClient_portfolio.count_portfolio):
    await bot.send_message(message.from_user.id, "–ì–æ—Ç–æ–≤–æ", reply_markup=kb_client)
    await state.finish()


def register_handlers_client(dp: Dispatcher):
    dp.register_message_handler(command_start, commands=['start', 'help'])
    dp.register_message_handler(tinkoff_prices, text=['üìä–°–ø–∏—Å–æ–∫ –∞–∫—Ü–∏–π'], state=FSMAnother.main)
    dp.register_message_handler(tinkoff_another_top_traders, text=['üèÜ–¢–æ–ø —Ç—Ä–µ–π–¥–µ—Ä–æ–≤'], state=FSMAnother.main)
    dp.register_message_handler(tinkoff_another_top_competitors, text=['üèÜ–¢–µ–∫—É—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è'],
                                state=FSMAnother.main)
    dp.register_message_handler(tinkoff_another_back, text=['–í–µ—Ä–Ω—É—Ç—å—Å—è'], state=FSMAnother.main)
    dp.register_message_handler(tinkoff_prices_0, text=['–ï—â—ë'], state=FSMClient_stocks_list.list)
    dp.register_message_handler(tinkoff_prices_1, text=['–í–µ—Ä–Ω—É—Ç—å—Å—è'], state=FSMClient_stocks_list.list)
    dp.register_message_handler(tinkoff_find_name, text=['üíµ–£–∑–Ω–∞—Ç—å —Ü–µ–Ω—É –Ω–∞ –∞–∫—Ü–∏—é'])
    dp.register_message_handler(tinkoff_another, text=['üõ†–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã'])
    dp.register_message_handler(load_stock_name, state=FSMClient.load_stock_name)
    dp.register_message_handler(buy_stock, text=['üì•–ö—É–ø–∏—Ç—å'], state=FSMClient.trading_stock)
    dp.register_message_handler(buy_stock_1, state=FSMClient.buy_stock_state)
    dp.register_message_handler(sell_stock, text=['üì§–ü—Ä–æ–¥–∞—Ç—å'], state=FSMClient.trading_stock)
    dp.register_message_handler(sell_stock_1, state=FSMClient.sell_stock_state)
    dp.register_message_handler(stock_stop_trading, text=['–í–µ—Ä–Ω—É—Ç—å—Å—è'], state=FSMClient.trading_stock)
    dp.register_message_handler(tinkoff_portfolio, text=['üí∞–ú–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å'])
    dp.register_message_handler(tinkoff_portfolio_count, text=['–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ü–µ–Ω—É –ø–æ—Ä—Ç—Ñ–µ–ª—è'],
                                state=FSMClient_portfolio.count_portfolio)
    dp.register_message_handler(tinkoff_portfolio_break, text=['–í–µ—Ä–Ω—É—Ç—å—Å—è'],
                                state=FSMClient_portfolio.count_portfolio)
